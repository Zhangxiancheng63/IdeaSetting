<application>
  <component name="AppStorage">
    <histories>
      <item value="decorate" />
      <item value="Array Deque" />
      <item value="Deque" />
      <item value="Marker" />
      <item value="is Candidate Element" />
      <item value="ROLE INFRASTRUCTURE" />
      <item value="decorate Bean Definition If Required" />
      <item value="String Tokenizer" />
      <item value="populate" />
      <item value="populate Defaults" />
      <item value="necessitating" />
      <item value="emulates" />
      <item value="ultimately" />
      <item value="Subclasses of {@code LinkageError} indicate that a class has some dependency on another class; however, the latter class has incompatibly changed after the compilation of the former class" />
      <item value="Indicates whether or not the current parse position is inside an XML comment." />
      <item value="deriving" />
      <item value="alphabetical" />
      <item value="last Index Of Supplementary" />
      <item value="MIN SUPPLEMENTARY CODE POINT" />
      <item value="SUPPLEMENTARY" />
      <item value="Enumeration" />
      <item value="Malformed" />
      <item value="public" />
      <item value="图" />
      <item value="图则" />
      <item value="Cabinet" />
      <item value="Indicator" />
      <item value="d" />
      <item value="JCQLHFGL" />
      <item value="push For Birthday" />
      <item value="third" />
      <item value="partitions" />
      <item value="Social" />
      <item value="bubbles" />
      <item value="Scene" />
      <item value="assmbly" />
      <item value="assembly" />
      <item value="judge" />
      <item value="isolation" />
      <item value="Join Relay" />
      <item value="Relay" />
      <item value="new" />
      <item value="mobile" />
      <item value="Historic" />
      <item value="Wrap" />
      <item value="Briefing" />
      <item value="Various flavors of acquire, varying in exclusive/shared and * control modes. Each is mostly the same, but annoyingly * different. Only a little bit of factoring is possible due to * interactions of exception mechanics (including ensuring that we * cancel if tryAcquire throws exception) and other control, at * least not without hurting performance too much." />
      <item value="Acquires in exclusive uninterruptible mode for thread already in * queue. Used by condition wait methods as well as acquire." />
      <item value="signal" />
      <item value="Predecessor was cancelled. Skip over predecessors and * indicate retry" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="289" />
        <entry key="ENGLISH" value="290" />
        <entry key="ALBANIAN" value="1" />
        <entry key="GERMAN" value="1" />
        <entry key="CROATIAN" value="1" />
        <entry key="KURDISH" value="1" />
        <entry key="LATIN" value="2" />
        <entry key="ROMANIAN" value="1" />
        <entry key="NORWEGIAN" value="1" />
        <entry key="GREEK" value="1" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1612486198489" />
  </component>
</application>